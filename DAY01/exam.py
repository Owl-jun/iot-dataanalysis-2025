from sklearn.neighbors import KNeighborsClassifier
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from matplotlib import rcParams, font_manager, rc

font_path = 'C:/Windows/Fonts/malgun.ttf' # 맑은고딕체로 변경
font = font_manager.FontProperties(fname=font_path).get_name() # 실제 설치된 폰트 이름조회
rc('font', family=font) # 한글깨짐현상 해결!!
rcParams['axes.unicode_minus'] = False # 한글 사용시 마이너스 표시 깨짐 해결!

# 원본데이터
fish_length = [25.4, 26.3, 26.5, 29.0, 29.0, 29.7, 29.7, 30.0, 30.0, 30.7, 31.0, 31.0, 
                31.5, 32.0, 32.0, 32.0, 33.0, 33.0, 33.5, 33.5, 34.0, 34.0, 34.5, 35.0, 
                35.0, 35.0, 35.0, 36.0, 36.0, 37.0, 38.5, 38.5, 39.5, 41.0, 41.0, 9.8, 
                10.5, 10.6, 11.0, 11.2, 11.3, 11.8, 11.8, 12.0, 12.2, 12.4, 13.0, 14.3, 15.0]
fish_weight = [242.0, 290.0, 340.0, 363.0, 430.0, 450.0, 500.0, 390.0, 450.0, 500.0, 475.0, 500.0, 
                500.0, 340.0, 600.0, 600.0, 700.0, 700.0, 610.0, 650.0, 575.0, 685.0, 620.0, 680.0, 
                700.0, 725.0, 720.0, 714.0, 850.0, 1000.0, 920.0, 955.0, 925.0, 975.0, 950.0, 6.7, 
                7.5, 7.0, 9.7, 9.8, 8.7, 10.0, 9.9, 9.8, 12.2, 13.4, 12.2, 19.7, 19.9]

# //////////////////////////////////////////////////////////////////////////////////////////////////////
# 물고기 샘플링
fish_data = [[l,w]for l,w in zip(fish_length, fish_weight)]
# 정답 정의
fish_target = [1] * 35 + [0] * 14
# //////////////////////////////////////////////////////////////////////////////////////////////////////

# //////////////////////////////////////////////////////////////////////////////////////////////////////
# 훈련 데이터 , 테스트 데이터 나누기
kn = KNeighborsClassifier()

train_input = fish_data[0:34]
train_target = fish_target[0:34]
test_input = fish_data[34:]
test_target = fish_target[34:]
# //////////////////////////////////////////////////////////////////////////////////////////////////////

# //////////////////////////////////////////////////////////////////////////////////////////////////////
kn.fit(train_input, train_target)   # fit : 학습시키는 행위 (input 은 target 이다. 라고 학습시키기)
print(kn.score(test_input, test_target))    # 정확도 측정
print(kn.predict([[30,500]]))               # 정답 예측
# //////////////////////////////////////////////////////////////////////////////////////////////////////


# //////////////////////////////////////////////////////////////////////////////////////////////////////
# numpy 활용 하여 셔플하기
input_arr = np.array(fish_data)     # 넘파이 .array 로 변환
target_arr = np.array(fish_target)

np.random.seed(38)                  # seed 에 따라 랜덤값이 변경됨
index = np.arange(49)               # range 같은 녀석이지만 자료형이 배열이다.
np.random.shuffle(index)            # 

train_input = input_arr[index[0:34]]
train_target = target_arr[index[0:34]]

test_input = input_arr[index[35:]]
test_target = target_arr[index[35:]]
# //////////////////////////////////////////////////////////////////////////////////////////////////////


# //////////////////////////////////////////////////////////////////////////////////////////////////////
# 시본 형태로 차트 변경
sns.set_style('whitegrid')
sns.set_theme(font='Malgun Gothic', rc = {'axes.unicode_minus' : False}) # 시본 사용시 한글깨짐 해결
# //////////////////////////////////////////////////////////////////////////////////////////////////////

# //////////////////////////////////////////////////////////////////////////////////////////////////////
# 실제 그래프로 확인하기
plt.scatter(train_input[:, 0], train_input[:, 1])
plt.scatter(test_input[:, 0], test_input[:, 1])
plt.xlabel('도미 / 빙어 길이')
plt.ylabel('도미 / 빙어 무게')
plt.title('도미 / 빙어 산점도')

plt.show()
# //////////////////////////////////////////////////////////////////////////////////////////////////////
